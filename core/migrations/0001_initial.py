# Generated by Django 4.2.7 on 2024-02-25 12:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, max_length=250, null=True)),
                ('phone_number', models.PositiveBigIntegerField(null=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('role', models.CharField(blank=True, choices=[('Client', 'Client'), ('Talent', 'Talent')], max_length=250, null=True)),
                ('token', models.CharField(blank=True, max_length=500, null=True)),
                ('updates', models.BooleanField(default=False)),
                ('authMedium', models.CharField(default='email', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(blank=True, choices=[('web-development', 'web-development'), ('Javascript', 'Javascript'), ('React', 'React'), ('HTML', 'HTML'), ('CSS', 'CSS'), ('Django', 'Django'), ('Flask', 'Flask')], max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TalentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digital_skills', models.CharField(blank=True, choices=[('BackendDevelopment', 'BackendDevelopment'), ('MobileDevelopment', 'MobileDevelopment'), ('UI/UX_Design', 'UI/UX_Design'), ('Branding_and_Printing', 'Branding_and_Printing'), ('Graphics_Design', 'Graphics_Design'), ('Content_Creation', 'Content_Creation'), ('Frontend_development', 'Frontend_Development')], max_length=250, null=True)),
                ('summary_of_profile', models.TextField(blank=True, null=True)),
                ('starting_price', models.PositiveBigIntegerField(blank=True, null=True)),
                ('about', models.CharField(blank=True, max_length=250, null=True)),
                ('nondigital_skills', models.CharField(blank=True, choices=[('Plumber', 'Plumber'), ('Civil-Engineer', 'Civil-Engineer'), ('Catering', 'Catering'), ('Hair_Stylist', 'Hair_stylist'), ('Electronics/Repairs', 'Electronics/Repairs'), ('Upholstery', 'Uphosltery'), ('Cobbling', 'Cobbling'), ('Mechanic', 'Mechanic'), ('Fashion-Designer', 'Fashion-Designer')], max_length=250, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, choices=[('DigitalSkills', 'DigitalSkills'), ('Non-DigitalSkills', 'Non-DigitalSkills')], max_length=250, null=True)),
                ('profile_pics', models.ImageField(blank=True, default='default.png', null=True, upload_to='files/images')),
                ('location', models.CharField(blank=True, max_length=250, null=True)),
                ('language', models.CharField(blank=True, max_length=250, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=250, null=True)),
                ('website_link', models.URLField(blank=True, null=True)),
                ('resume_link', models.URLField(blank=True, null=True)),
                ('linked_in_url', models.URLField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('x_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('behance_url', models.URLField(blank=True, null=True)),
                ('medium_url', models.URLField(blank=True, null=True)),
                ('d_skills', models.ManyToManyField(to='core.skills')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='talentprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_type', models.CharField(blank=True, choices=[('Remote', 'Remote'), ('On-site', 'On-site'), ('Hybrid', 'Hybrid')], max_length=250, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_type', to='core.talentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(blank=True, choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=500, null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('talent_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_schedule', to='core.talentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=5000, null=True)),
                ('talent_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.talentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, null=True, upload_to='files/images')),
                ('d_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='core.talentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pics', models.ImageField(blank=True, default='default.png', null=True, upload_to='files/images')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clientprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
